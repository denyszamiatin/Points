'''Displays the field that was generated by generate_field.
What it do:
1. import generate_field
2. Numerate a columns in alphabetical.
3. Numerate a rows in digital.
4. Align first row (alphabetical)
5. Align first column of the field (digital).
6. Print the final look of the field (You can append print_field() into the to display field).
Attention!!!
Function "generate_field" consist function "change_field"
Quote:
    Function for making changes in field.
    It's created for future development. For now it's doing nothing.
    It just take the list and return it back without changes'''


from generate_field import (generate_field, create_list_alphabet,
                            generate_dig_list, FIELD_WIDTH)


def get_vertical_sign_length(digit_list):
    return len(str(digit_list[-1]))


def output_field(field):
    output_width = get_vertical_sign_length(generate_dig_list()) + \
                   FIELD_WIDTH * 2
    print(' '.join(create_list_alphabet()[:FIELD_WIDTH]).rjust(output_width))
    for num, row in zip(generate_dig_list(), field):
        print(' '.join(str(i) for i in [num] + row).rjust(output_width))


output_field(generate_field())
